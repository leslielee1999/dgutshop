package org.dgutstu.dgutshop.db.domain;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

public class DgutshopProductExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table dgutshop_product
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table dgutshop_product
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table dgutshop_product
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dgutshop_product
     *
     * @mbg.generated
     */
    public DgutshopProductExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dgutshop_product
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dgutshop_product
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dgutshop_product
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dgutshop_product
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dgutshop_product
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dgutshop_product
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dgutshop_product
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dgutshop_product
     *
     * @mbg.generated
     */
    public DgutshopProductExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dgutshop_product
     *
     * @mbg.generated
     */
    public DgutshopProductExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dgutshop_product
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dgutshop_product
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dgutshop_product
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dgutshop_product
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        DgutshopProductExample example = new DgutshopProductExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dgutshop_product
     *
     * @mbg.generated
     */
    public DgutshopProductExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dgutshop_product
     *
     * @mbg.generated
     */
    public DgutshopProductExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table dgutshop_product
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andIdEqualToColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andIdNotEqualToColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanOrEqualToColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanOrEqualToColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andCodeIsNull() {
            addCriterion("code is null");
            return (Criteria) this;
        }

        public Criteria andCodeIsNotNull() {
            addCriterion("code is not null");
            return (Criteria) this;
        }

        public Criteria andCodeEqualTo(String value) {
            addCriterion("code =", value, "code");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andCodeEqualToColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("code = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCodeNotEqualTo(String value) {
            addCriterion("code <>", value, "code");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andCodeNotEqualToColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("code <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCodeGreaterThan(String value) {
            addCriterion("code >", value, "code");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andCodeGreaterThanColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("code > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCodeGreaterThanOrEqualTo(String value) {
            addCriterion("code >=", value, "code");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andCodeGreaterThanOrEqualToColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("code >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCodeLessThan(String value) {
            addCriterion("code <", value, "code");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andCodeLessThanColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("code < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCodeLessThanOrEqualTo(String value) {
            addCriterion("code <=", value, "code");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andCodeLessThanOrEqualToColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("code <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCodeLike(String value) {
            addCriterion("code like", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeNotLike(String value) {
            addCriterion("code not like", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeIn(List<String> values) {
            addCriterion("code in", values, "code");
            return (Criteria) this;
        }

        public Criteria andCodeNotIn(List<String> values) {
            addCriterion("code not in", values, "code");
            return (Criteria) this;
        }

        public Criteria andCodeBetween(String value1, String value2) {
            addCriterion("code between", value1, value2, "code");
            return (Criteria) this;
        }

        public Criteria andCodeNotBetween(String value1, String value2) {
            addCriterion("code not between", value1, value2, "code");
            return (Criteria) this;
        }

        public Criteria andNameIsNull() {
            addCriterion("`name` is null");
            return (Criteria) this;
        }

        public Criteria andNameIsNotNull() {
            addCriterion("`name` is not null");
            return (Criteria) this;
        }

        public Criteria andNameEqualTo(String value) {
            addCriterion("`name` =", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andNameEqualToColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("`name` = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameNotEqualTo(String value) {
            addCriterion("`name` <>", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andNameNotEqualToColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("`name` <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameGreaterThan(String value) {
            addCriterion("`name` >", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andNameGreaterThanColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("`name` > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion("`name` >=", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andNameGreaterThanOrEqualToColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("`name` >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameLessThan(String value) {
            addCriterion("`name` <", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andNameLessThanColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("`name` < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion("`name` <=", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andNameLessThanOrEqualToColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("`name` <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameLike(String value) {
            addCriterion("`name` like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotLike(String value) {
            addCriterion("`name` not like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameIn(List<String> values) {
            addCriterion("`name` in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotIn(List<String> values) {
            addCriterion("`name` not in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("`name` between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("`name` not between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andBigOriginalPriceIsNull() {
            addCriterion("big_original_price is null");
            return (Criteria) this;
        }

        public Criteria andBigOriginalPriceIsNotNull() {
            addCriterion("big_original_price is not null");
            return (Criteria) this;
        }

        public Criteria andBigOriginalPriceEqualTo(BigDecimal value) {
            addCriterion("big_original_price =", value, "bigOriginalPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andBigOriginalPriceEqualToColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("big_original_price = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBigOriginalPriceNotEqualTo(BigDecimal value) {
            addCriterion("big_original_price <>", value, "bigOriginalPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andBigOriginalPriceNotEqualToColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("big_original_price <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBigOriginalPriceGreaterThan(BigDecimal value) {
            addCriterion("big_original_price >", value, "bigOriginalPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andBigOriginalPriceGreaterThanColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("big_original_price > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBigOriginalPriceGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("big_original_price >=", value, "bigOriginalPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andBigOriginalPriceGreaterThanOrEqualToColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("big_original_price >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBigOriginalPriceLessThan(BigDecimal value) {
            addCriterion("big_original_price <", value, "bigOriginalPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andBigOriginalPriceLessThanColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("big_original_price < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBigOriginalPriceLessThanOrEqualTo(BigDecimal value) {
            addCriterion("big_original_price <=", value, "bigOriginalPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andBigOriginalPriceLessThanOrEqualToColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("big_original_price <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBigOriginalPriceIn(List<BigDecimal> values) {
            addCriterion("big_original_price in", values, "bigOriginalPrice");
            return (Criteria) this;
        }

        public Criteria andBigOriginalPriceNotIn(List<BigDecimal> values) {
            addCriterion("big_original_price not in", values, "bigOriginalPrice");
            return (Criteria) this;
        }

        public Criteria andBigOriginalPriceBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("big_original_price between", value1, value2, "bigOriginalPrice");
            return (Criteria) this;
        }

        public Criteria andBigOriginalPriceNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("big_original_price not between", value1, value2, "bigOriginalPrice");
            return (Criteria) this;
        }

        public Criteria andBigPromotePriceIsNull() {
            addCriterion("big_promote_price is null");
            return (Criteria) this;
        }

        public Criteria andBigPromotePriceIsNotNull() {
            addCriterion("big_promote_price is not null");
            return (Criteria) this;
        }

        public Criteria andBigPromotePriceEqualTo(BigDecimal value) {
            addCriterion("big_promote_price =", value, "bigPromotePrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andBigPromotePriceEqualToColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("big_promote_price = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBigPromotePriceNotEqualTo(BigDecimal value) {
            addCriterion("big_promote_price <>", value, "bigPromotePrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andBigPromotePriceNotEqualToColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("big_promote_price <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBigPromotePriceGreaterThan(BigDecimal value) {
            addCriterion("big_promote_price >", value, "bigPromotePrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andBigPromotePriceGreaterThanColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("big_promote_price > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBigPromotePriceGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("big_promote_price >=", value, "bigPromotePrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andBigPromotePriceGreaterThanOrEqualToColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("big_promote_price >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBigPromotePriceLessThan(BigDecimal value) {
            addCriterion("big_promote_price <", value, "bigPromotePrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andBigPromotePriceLessThanColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("big_promote_price < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBigPromotePriceLessThanOrEqualTo(BigDecimal value) {
            addCriterion("big_promote_price <=", value, "bigPromotePrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andBigPromotePriceLessThanOrEqualToColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("big_promote_price <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBigPromotePriceIn(List<BigDecimal> values) {
            addCriterion("big_promote_price in", values, "bigPromotePrice");
            return (Criteria) this;
        }

        public Criteria andBigPromotePriceNotIn(List<BigDecimal> values) {
            addCriterion("big_promote_price not in", values, "bigPromotePrice");
            return (Criteria) this;
        }

        public Criteria andBigPromotePriceBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("big_promote_price between", value1, value2, "bigPromotePrice");
            return (Criteria) this;
        }

        public Criteria andBigPromotePriceNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("big_promote_price not between", value1, value2, "bigPromotePrice");
            return (Criteria) this;
        }

        public Criteria andMediumOriginalPriceIsNull() {
            addCriterion("medium_original_price is null");
            return (Criteria) this;
        }

        public Criteria andMediumOriginalPriceIsNotNull() {
            addCriterion("medium_original_price is not null");
            return (Criteria) this;
        }

        public Criteria andMediumOriginalPriceEqualTo(BigDecimal value) {
            addCriterion("medium_original_price =", value, "mediumOriginalPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andMediumOriginalPriceEqualToColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("medium_original_price = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMediumOriginalPriceNotEqualTo(BigDecimal value) {
            addCriterion("medium_original_price <>", value, "mediumOriginalPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andMediumOriginalPriceNotEqualToColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("medium_original_price <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMediumOriginalPriceGreaterThan(BigDecimal value) {
            addCriterion("medium_original_price >", value, "mediumOriginalPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andMediumOriginalPriceGreaterThanColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("medium_original_price > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMediumOriginalPriceGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("medium_original_price >=", value, "mediumOriginalPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andMediumOriginalPriceGreaterThanOrEqualToColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("medium_original_price >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMediumOriginalPriceLessThan(BigDecimal value) {
            addCriterion("medium_original_price <", value, "mediumOriginalPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andMediumOriginalPriceLessThanColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("medium_original_price < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMediumOriginalPriceLessThanOrEqualTo(BigDecimal value) {
            addCriterion("medium_original_price <=", value, "mediumOriginalPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andMediumOriginalPriceLessThanOrEqualToColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("medium_original_price <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMediumOriginalPriceIn(List<BigDecimal> values) {
            addCriterion("medium_original_price in", values, "mediumOriginalPrice");
            return (Criteria) this;
        }

        public Criteria andMediumOriginalPriceNotIn(List<BigDecimal> values) {
            addCriterion("medium_original_price not in", values, "mediumOriginalPrice");
            return (Criteria) this;
        }

        public Criteria andMediumOriginalPriceBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("medium_original_price between", value1, value2, "mediumOriginalPrice");
            return (Criteria) this;
        }

        public Criteria andMediumOriginalPriceNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("medium_original_price not between", value1, value2, "mediumOriginalPrice");
            return (Criteria) this;
        }

        public Criteria andMediumPromotePriceIsNull() {
            addCriterion("medium_promote_price is null");
            return (Criteria) this;
        }

        public Criteria andMediumPromotePriceIsNotNull() {
            addCriterion("medium_promote_price is not null");
            return (Criteria) this;
        }

        public Criteria andMediumPromotePriceEqualTo(BigDecimal value) {
            addCriterion("medium_promote_price =", value, "mediumPromotePrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andMediumPromotePriceEqualToColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("medium_promote_price = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMediumPromotePriceNotEqualTo(BigDecimal value) {
            addCriterion("medium_promote_price <>", value, "mediumPromotePrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andMediumPromotePriceNotEqualToColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("medium_promote_price <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMediumPromotePriceGreaterThan(BigDecimal value) {
            addCriterion("medium_promote_price >", value, "mediumPromotePrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andMediumPromotePriceGreaterThanColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("medium_promote_price > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMediumPromotePriceGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("medium_promote_price >=", value, "mediumPromotePrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andMediumPromotePriceGreaterThanOrEqualToColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("medium_promote_price >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMediumPromotePriceLessThan(BigDecimal value) {
            addCriterion("medium_promote_price <", value, "mediumPromotePrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andMediumPromotePriceLessThanColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("medium_promote_price < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMediumPromotePriceLessThanOrEqualTo(BigDecimal value) {
            addCriterion("medium_promote_price <=", value, "mediumPromotePrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andMediumPromotePriceLessThanOrEqualToColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("medium_promote_price <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMediumPromotePriceIn(List<BigDecimal> values) {
            addCriterion("medium_promote_price in", values, "mediumPromotePrice");
            return (Criteria) this;
        }

        public Criteria andMediumPromotePriceNotIn(List<BigDecimal> values) {
            addCriterion("medium_promote_price not in", values, "mediumPromotePrice");
            return (Criteria) this;
        }

        public Criteria andMediumPromotePriceBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("medium_promote_price between", value1, value2, "mediumPromotePrice");
            return (Criteria) this;
        }

        public Criteria andMediumPromotePriceNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("medium_promote_price not between", value1, value2, "mediumPromotePrice");
            return (Criteria) this;
        }

        public Criteria andDescriptionIsNull() {
            addCriterion("description is null");
            return (Criteria) this;
        }

        public Criteria andDescriptionIsNotNull() {
            addCriterion("description is not null");
            return (Criteria) this;
        }

        public Criteria andDescriptionEqualTo(String value) {
            addCriterion("description =", value, "description");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andDescriptionEqualToColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("description = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDescriptionNotEqualTo(String value) {
            addCriterion("description <>", value, "description");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andDescriptionNotEqualToColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("description <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDescriptionGreaterThan(String value) {
            addCriterion("description >", value, "description");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andDescriptionGreaterThanColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("description > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDescriptionGreaterThanOrEqualTo(String value) {
            addCriterion("description >=", value, "description");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andDescriptionGreaterThanOrEqualToColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("description >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDescriptionLessThan(String value) {
            addCriterion("description <", value, "description");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andDescriptionLessThanColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("description < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDescriptionLessThanOrEqualTo(String value) {
            addCriterion("description <=", value, "description");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andDescriptionLessThanOrEqualToColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("description <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDescriptionLike(String value) {
            addCriterion("description like", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionNotLike(String value) {
            addCriterion("description not like", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionIn(List<String> values) {
            addCriterion("description in", values, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionNotIn(List<String> values) {
            addCriterion("description not in", values, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionBetween(String value1, String value2) {
            addCriterion("description between", value1, value2, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionNotBetween(String value1, String value2) {
            addCriterion("description not between", value1, value2, "description");
            return (Criteria) this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("`status` is null");
            return (Criteria) this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("`status` is not null");
            return (Criteria) this;
        }

        public Criteria andStatusEqualTo(Boolean value) {
            addCriterion("`status` =", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andStatusEqualToColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("`status` = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusNotEqualTo(Boolean value) {
            addCriterion("`status` <>", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andStatusNotEqualToColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("`status` <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThan(Boolean value) {
            addCriterion("`status` >", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andStatusGreaterThanColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("`status` > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(Boolean value) {
            addCriterion("`status` >=", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andStatusGreaterThanOrEqualToColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("`status` >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusLessThan(Boolean value) {
            addCriterion("`status` <", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andStatusLessThanColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("`status` < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusLessThanOrEqualTo(Boolean value) {
            addCriterion("`status` <=", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andStatusLessThanOrEqualToColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("`status` <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusIn(List<Boolean> values) {
            addCriterion("`status` in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotIn(List<Boolean> values) {
            addCriterion("`status` not in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusBetween(Boolean value1, Boolean value2) {
            addCriterion("`status` between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotBetween(Boolean value1, Boolean value2) {
            addCriterion("`status` not between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andPictureIsNull() {
            addCriterion("picture is null");
            return (Criteria) this;
        }

        public Criteria andPictureIsNotNull() {
            addCriterion("picture is not null");
            return (Criteria) this;
        }

        public Criteria andPictureEqualTo(String value) {
            addCriterion("picture =", value, "picture");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andPictureEqualToColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("picture = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPictureNotEqualTo(String value) {
            addCriterion("picture <>", value, "picture");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andPictureNotEqualToColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("picture <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPictureGreaterThan(String value) {
            addCriterion("picture >", value, "picture");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andPictureGreaterThanColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("picture > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPictureGreaterThanOrEqualTo(String value) {
            addCriterion("picture >=", value, "picture");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andPictureGreaterThanOrEqualToColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("picture >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPictureLessThan(String value) {
            addCriterion("picture <", value, "picture");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andPictureLessThanColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("picture < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPictureLessThanOrEqualTo(String value) {
            addCriterion("picture <=", value, "picture");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andPictureLessThanOrEqualToColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("picture <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPictureLike(String value) {
            addCriterion("picture like", value, "picture");
            return (Criteria) this;
        }

        public Criteria andPictureNotLike(String value) {
            addCriterion("picture not like", value, "picture");
            return (Criteria) this;
        }

        public Criteria andPictureIn(List<String> values) {
            addCriterion("picture in", values, "picture");
            return (Criteria) this;
        }

        public Criteria andPictureNotIn(List<String> values) {
            addCriterion("picture not in", values, "picture");
            return (Criteria) this;
        }

        public Criteria andPictureBetween(String value1, String value2) {
            addCriterion("picture between", value1, value2, "picture");
            return (Criteria) this;
        }

        public Criteria andPictureNotBetween(String value1, String value2) {
            addCriterion("picture not between", value1, value2, "picture");
            return (Criteria) this;
        }

        public Criteria andSalesIsNull() {
            addCriterion("sales is null");
            return (Criteria) this;
        }

        public Criteria andSalesIsNotNull() {
            addCriterion("sales is not null");
            return (Criteria) this;
        }

        public Criteria andSalesEqualTo(Integer value) {
            addCriterion("sales =", value, "sales");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andSalesEqualToColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("sales = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSalesNotEqualTo(Integer value) {
            addCriterion("sales <>", value, "sales");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andSalesNotEqualToColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("sales <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSalesGreaterThan(Integer value) {
            addCriterion("sales >", value, "sales");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andSalesGreaterThanColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("sales > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSalesGreaterThanOrEqualTo(Integer value) {
            addCriterion("sales >=", value, "sales");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andSalesGreaterThanOrEqualToColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("sales >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSalesLessThan(Integer value) {
            addCriterion("sales <", value, "sales");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andSalesLessThanColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("sales < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSalesLessThanOrEqualTo(Integer value) {
            addCriterion("sales <=", value, "sales");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andSalesLessThanOrEqualToColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("sales <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSalesIn(List<Integer> values) {
            addCriterion("sales in", values, "sales");
            return (Criteria) this;
        }

        public Criteria andSalesNotIn(List<Integer> values) {
            addCriterion("sales not in", values, "sales");
            return (Criteria) this;
        }

        public Criteria andSalesBetween(Integer value1, Integer value2) {
            addCriterion("sales between", value1, value2, "sales");
            return (Criteria) this;
        }

        public Criteria andSalesNotBetween(Integer value1, Integer value2) {
            addCriterion("sales not between", value1, value2, "sales");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(LocalDateTime value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeEqualToColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("create_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(LocalDateTime value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeNotEqualToColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("create_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(LocalDateTime value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeGreaterThanColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("create_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeGreaterThanOrEqualToColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("create_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(LocalDateTime value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeLessThanColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("create_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeLessThanOrEqualToColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("create_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<LocalDateTime> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<LocalDateTime> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNull() {
            addCriterion("update_time is null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNotNull() {
            addCriterion("update_time is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeEqualTo(LocalDateTime value) {
            addCriterion("update_time =", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeEqualToColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("update_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotEqualTo(LocalDateTime value) {
            addCriterion("update_time <>", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeNotEqualToColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("update_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThan(LocalDateTime value) {
            addCriterion("update_time >", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeGreaterThanColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("update_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("update_time >=", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeGreaterThanOrEqualToColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("update_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThan(LocalDateTime value) {
            addCriterion("update_time <", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeLessThanColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("update_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("update_time <=", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeLessThanOrEqualToColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("update_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIn(List<LocalDateTime> values) {
            addCriterion("update_time in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotIn(List<LocalDateTime> values) {
            addCriterion("update_time not in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("update_time between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("update_time not between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andHeatedIsNull() {
            addCriterion("heated is null");
            return (Criteria) this;
        }

        public Criteria andHeatedIsNotNull() {
            addCriterion("heated is not null");
            return (Criteria) this;
        }

        public Criteria andHeatedEqualTo(Boolean value) {
            addCriterion("heated =", value, "heated");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andHeatedEqualToColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("heated = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHeatedNotEqualTo(Boolean value) {
            addCriterion("heated <>", value, "heated");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andHeatedNotEqualToColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("heated <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHeatedGreaterThan(Boolean value) {
            addCriterion("heated >", value, "heated");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andHeatedGreaterThanColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("heated > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHeatedGreaterThanOrEqualTo(Boolean value) {
            addCriterion("heated >=", value, "heated");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andHeatedGreaterThanOrEqualToColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("heated >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHeatedLessThan(Boolean value) {
            addCriterion("heated <", value, "heated");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andHeatedLessThanColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("heated < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHeatedLessThanOrEqualTo(Boolean value) {
            addCriterion("heated <=", value, "heated");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andHeatedLessThanOrEqualToColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("heated <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHeatedIn(List<Boolean> values) {
            addCriterion("heated in", values, "heated");
            return (Criteria) this;
        }

        public Criteria andHeatedNotIn(List<Boolean> values) {
            addCriterion("heated not in", values, "heated");
            return (Criteria) this;
        }

        public Criteria andHeatedBetween(Boolean value1, Boolean value2) {
            addCriterion("heated between", value1, value2, "heated");
            return (Criteria) this;
        }

        public Criteria andHeatedNotBetween(Boolean value1, Boolean value2) {
            addCriterion("heated not between", value1, value2, "heated");
            return (Criteria) this;
        }

        public Criteria andDeletedIsNull() {
            addCriterion("deleted is null");
            return (Criteria) this;
        }

        public Criteria andDeletedIsNotNull() {
            addCriterion("deleted is not null");
            return (Criteria) this;
        }

        public Criteria andDeletedEqualTo(Boolean value) {
            addCriterion("deleted =", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andDeletedEqualToColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("deleted = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedNotEqualTo(Boolean value) {
            addCriterion("deleted <>", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andDeletedNotEqualToColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("deleted <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedGreaterThan(Boolean value) {
            addCriterion("deleted >", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andDeletedGreaterThanColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("deleted > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedGreaterThanOrEqualTo(Boolean value) {
            addCriterion("deleted >=", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andDeletedGreaterThanOrEqualToColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("deleted >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedLessThan(Boolean value) {
            addCriterion("deleted <", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andDeletedLessThanColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("deleted < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedLessThanOrEqualTo(Boolean value) {
            addCriterion("deleted <=", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andDeletedLessThanOrEqualToColumn(DgutshopProduct.Column column) {
            addCriterion(new StringBuilder("deleted <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedIn(List<Boolean> values) {
            addCriterion("deleted in", values, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedNotIn(List<Boolean> values) {
            addCriterion("deleted not in", values, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedBetween(Boolean value1, Boolean value2) {
            addCriterion("deleted between", value1, value2, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedNotBetween(Boolean value1, Boolean value2) {
            addCriterion("deleted not between", value1, value2, "deleted");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table dgutshop_product
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        private DgutshopProductExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        protected Criteria(DgutshopProductExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public DgutshopProductExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        public Criteria andLogicalDeleted(boolean deleted) {
            return deleted ? andDeletedEqualTo(DgutshopProduct.Deleted.IS_DELETED.value()) : andDeletedNotEqualTo(DgutshopProduct.Deleted.IS_DELETED.value());
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table dgutshop_product
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table dgutshop_product
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_product
         *
         * @mbg.generated
         */
        void example(org.dgutstu.dgutshop.db.domain.DgutshopProductExample example);
    }
}