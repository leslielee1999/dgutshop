package org.dgutstu.dgutshop.db.domain;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

public class DgutshopOrderItemExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table dgutshop_order_item
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table dgutshop_order_item
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table dgutshop_order_item
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dgutshop_order_item
     *
     * @mbg.generated
     */
    public DgutshopOrderItemExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dgutshop_order_item
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dgutshop_order_item
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dgutshop_order_item
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dgutshop_order_item
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dgutshop_order_item
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dgutshop_order_item
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dgutshop_order_item
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dgutshop_order_item
     *
     * @mbg.generated
     */
    public DgutshopOrderItemExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dgutshop_order_item
     *
     * @mbg.generated
     */
    public DgutshopOrderItemExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dgutshop_order_item
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dgutshop_order_item
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dgutshop_order_item
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dgutshop_order_item
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        DgutshopOrderItemExample example = new DgutshopOrderItemExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dgutshop_order_item
     *
     * @mbg.generated
     */
    public DgutshopOrderItemExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dgutshop_order_item
     *
     * @mbg.generated
     */
    public DgutshopOrderItemExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table dgutshop_order_item
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> toppingIdCriteria;

        protected List<Criterion> toppingNameCriteria;

        protected List<Criterion> allCriteria;

        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
            toppingIdCriteria = new ArrayList<Criterion>();
            toppingNameCriteria = new ArrayList<Criterion>();
        }

        public List<Criterion> getToppingIdCriteria() {
            return toppingIdCriteria;
        }

        protected void addToppingIdCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            toppingIdCriteria.add(new Criterion(condition, value, "org.dgutstu.dgutshop.db.util.JsonIntegerArrayTypeHandler"));
            allCriteria = null;
        }

        protected void addToppingIdCriterion(String condition, Integer[] value1, Integer[] value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            toppingIdCriteria.add(new Criterion(condition, value1, value2, "org.dgutstu.dgutshop.db.util.JsonIntegerArrayTypeHandler"));
            allCriteria = null;
        }

        public List<Criterion> getToppingNameCriteria() {
            return toppingNameCriteria;
        }

        protected void addToppingNameCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            toppingNameCriteria.add(new Criterion(condition, value, "org.dgutstu.dgutshop.db.util.JsonStringArrayTypeHandler"));
            allCriteria = null;
        }

        protected void addToppingNameCriterion(String condition, String[] value1, String[] value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            toppingNameCriteria.add(new Criterion(condition, value1, value2, "org.dgutstu.dgutshop.db.util.JsonStringArrayTypeHandler"));
            allCriteria = null;
        }

        public boolean isValid() {
            return criteria.size() > 0
                || toppingIdCriteria.size() > 0
                || toppingNameCriteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            if (allCriteria == null) {
                allCriteria = new ArrayList<Criterion>();
                allCriteria.addAll(criteria);
                allCriteria.addAll(toppingIdCriteria);
                allCriteria.addAll(toppingNameCriteria);
            }
            return allCriteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
            allCriteria = null;
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
            allCriteria = null;
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
            allCriteria = null;
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andIdEqualToColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andIdNotEqualToColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanOrEqualToColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanOrEqualToColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andOidIsNull() {
            addCriterion("oid is null");
            return (Criteria) this;
        }

        public Criteria andOidIsNotNull() {
            addCriterion("oid is not null");
            return (Criteria) this;
        }

        public Criteria andOidEqualTo(Integer value) {
            addCriterion("oid =", value, "oid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andOidEqualToColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("oid = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOidNotEqualTo(Integer value) {
            addCriterion("oid <>", value, "oid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andOidNotEqualToColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("oid <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOidGreaterThan(Integer value) {
            addCriterion("oid >", value, "oid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andOidGreaterThanColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("oid > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOidGreaterThanOrEqualTo(Integer value) {
            addCriterion("oid >=", value, "oid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andOidGreaterThanOrEqualToColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("oid >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOidLessThan(Integer value) {
            addCriterion("oid <", value, "oid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andOidLessThanColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("oid < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOidLessThanOrEqualTo(Integer value) {
            addCriterion("oid <=", value, "oid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andOidLessThanOrEqualToColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("oid <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOidIn(List<Integer> values) {
            addCriterion("oid in", values, "oid");
            return (Criteria) this;
        }

        public Criteria andOidNotIn(List<Integer> values) {
            addCriterion("oid not in", values, "oid");
            return (Criteria) this;
        }

        public Criteria andOidBetween(Integer value1, Integer value2) {
            addCriterion("oid between", value1, value2, "oid");
            return (Criteria) this;
        }

        public Criteria andOidNotBetween(Integer value1, Integer value2) {
            addCriterion("oid not between", value1, value2, "oid");
            return (Criteria) this;
        }

        public Criteria andPidIsNull() {
            addCriterion("pid is null");
            return (Criteria) this;
        }

        public Criteria andPidIsNotNull() {
            addCriterion("pid is not null");
            return (Criteria) this;
        }

        public Criteria andPidEqualTo(Integer value) {
            addCriterion("pid =", value, "pid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andPidEqualToColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("pid = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPidNotEqualTo(Integer value) {
            addCriterion("pid <>", value, "pid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andPidNotEqualToColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("pid <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPidGreaterThan(Integer value) {
            addCriterion("pid >", value, "pid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andPidGreaterThanColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("pid > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPidGreaterThanOrEqualTo(Integer value) {
            addCriterion("pid >=", value, "pid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andPidGreaterThanOrEqualToColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("pid >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPidLessThan(Integer value) {
            addCriterion("pid <", value, "pid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andPidLessThanColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("pid < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPidLessThanOrEqualTo(Integer value) {
            addCriterion("pid <=", value, "pid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andPidLessThanOrEqualToColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("pid <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPidIn(List<Integer> values) {
            addCriterion("pid in", values, "pid");
            return (Criteria) this;
        }

        public Criteria andPidNotIn(List<Integer> values) {
            addCriterion("pid not in", values, "pid");
            return (Criteria) this;
        }

        public Criteria andPidBetween(Integer value1, Integer value2) {
            addCriterion("pid between", value1, value2, "pid");
            return (Criteria) this;
        }

        public Criteria andPidNotBetween(Integer value1, Integer value2) {
            addCriterion("pid not between", value1, value2, "pid");
            return (Criteria) this;
        }

        public Criteria andProductNameIsNull() {
            addCriterion("product_name is null");
            return (Criteria) this;
        }

        public Criteria andProductNameIsNotNull() {
            addCriterion("product_name is not null");
            return (Criteria) this;
        }

        public Criteria andProductNameEqualTo(String value) {
            addCriterion("product_name =", value, "productName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andProductNameEqualToColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("product_name = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProductNameNotEqualTo(String value) {
            addCriterion("product_name <>", value, "productName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andProductNameNotEqualToColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("product_name <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProductNameGreaterThan(String value) {
            addCriterion("product_name >", value, "productName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andProductNameGreaterThanColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("product_name > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProductNameGreaterThanOrEqualTo(String value) {
            addCriterion("product_name >=", value, "productName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andProductNameGreaterThanOrEqualToColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("product_name >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProductNameLessThan(String value) {
            addCriterion("product_name <", value, "productName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andProductNameLessThanColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("product_name < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProductNameLessThanOrEqualTo(String value) {
            addCriterion("product_name <=", value, "productName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andProductNameLessThanOrEqualToColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("product_name <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProductNameLike(String value) {
            addCriterion("product_name like", value, "productName");
            return (Criteria) this;
        }

        public Criteria andProductNameNotLike(String value) {
            addCriterion("product_name not like", value, "productName");
            return (Criteria) this;
        }

        public Criteria andProductNameIn(List<String> values) {
            addCriterion("product_name in", values, "productName");
            return (Criteria) this;
        }

        public Criteria andProductNameNotIn(List<String> values) {
            addCriterion("product_name not in", values, "productName");
            return (Criteria) this;
        }

        public Criteria andProductNameBetween(String value1, String value2) {
            addCriterion("product_name between", value1, value2, "productName");
            return (Criteria) this;
        }

        public Criteria andProductNameNotBetween(String value1, String value2) {
            addCriterion("product_name not between", value1, value2, "productName");
            return (Criteria) this;
        }

        public Criteria andSizeIsNull() {
            addCriterion("`size` is null");
            return (Criteria) this;
        }

        public Criteria andSizeIsNotNull() {
            addCriterion("`size` is not null");
            return (Criteria) this;
        }

        public Criteria andSizeEqualTo(Byte value) {
            addCriterion("`size` =", value, "size");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andSizeEqualToColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("`size` = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSizeNotEqualTo(Byte value) {
            addCriterion("`size` <>", value, "size");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andSizeNotEqualToColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("`size` <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSizeGreaterThan(Byte value) {
            addCriterion("`size` >", value, "size");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andSizeGreaterThanColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("`size` > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSizeGreaterThanOrEqualTo(Byte value) {
            addCriterion("`size` >=", value, "size");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andSizeGreaterThanOrEqualToColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("`size` >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSizeLessThan(Byte value) {
            addCriterion("`size` <", value, "size");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andSizeLessThanColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("`size` < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSizeLessThanOrEqualTo(Byte value) {
            addCriterion("`size` <=", value, "size");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andSizeLessThanOrEqualToColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("`size` <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSizeIn(List<Byte> values) {
            addCriterion("`size` in", values, "size");
            return (Criteria) this;
        }

        public Criteria andSizeNotIn(List<Byte> values) {
            addCriterion("`size` not in", values, "size");
            return (Criteria) this;
        }

        public Criteria andSizeBetween(Byte value1, Byte value2) {
            addCriterion("`size` between", value1, value2, "size");
            return (Criteria) this;
        }

        public Criteria andSizeNotBetween(Byte value1, Byte value2) {
            addCriterion("`size` not between", value1, value2, "size");
            return (Criteria) this;
        }

        public Criteria andProductOriginalPriceIsNull() {
            addCriterion("product_original_price is null");
            return (Criteria) this;
        }

        public Criteria andProductOriginalPriceIsNotNull() {
            addCriterion("product_original_price is not null");
            return (Criteria) this;
        }

        public Criteria andProductOriginalPriceEqualTo(BigDecimal value) {
            addCriterion("product_original_price =", value, "productOriginalPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andProductOriginalPriceEqualToColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("product_original_price = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProductOriginalPriceNotEqualTo(BigDecimal value) {
            addCriterion("product_original_price <>", value, "productOriginalPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andProductOriginalPriceNotEqualToColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("product_original_price <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProductOriginalPriceGreaterThan(BigDecimal value) {
            addCriterion("product_original_price >", value, "productOriginalPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andProductOriginalPriceGreaterThanColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("product_original_price > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProductOriginalPriceGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("product_original_price >=", value, "productOriginalPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andProductOriginalPriceGreaterThanOrEqualToColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("product_original_price >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProductOriginalPriceLessThan(BigDecimal value) {
            addCriterion("product_original_price <", value, "productOriginalPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andProductOriginalPriceLessThanColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("product_original_price < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProductOriginalPriceLessThanOrEqualTo(BigDecimal value) {
            addCriterion("product_original_price <=", value, "productOriginalPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andProductOriginalPriceLessThanOrEqualToColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("product_original_price <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProductOriginalPriceIn(List<BigDecimal> values) {
            addCriterion("product_original_price in", values, "productOriginalPrice");
            return (Criteria) this;
        }

        public Criteria andProductOriginalPriceNotIn(List<BigDecimal> values) {
            addCriterion("product_original_price not in", values, "productOriginalPrice");
            return (Criteria) this;
        }

        public Criteria andProductOriginalPriceBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("product_original_price between", value1, value2, "productOriginalPrice");
            return (Criteria) this;
        }

        public Criteria andProductOriginalPriceNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("product_original_price not between", value1, value2, "productOriginalPrice");
            return (Criteria) this;
        }

        public Criteria andProductPromotePriceIsNull() {
            addCriterion("product_promote_price is null");
            return (Criteria) this;
        }

        public Criteria andProductPromotePriceIsNotNull() {
            addCriterion("product_promote_price is not null");
            return (Criteria) this;
        }

        public Criteria andProductPromotePriceEqualTo(BigDecimal value) {
            addCriterion("product_promote_price =", value, "productPromotePrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andProductPromotePriceEqualToColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("product_promote_price = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProductPromotePriceNotEqualTo(BigDecimal value) {
            addCriterion("product_promote_price <>", value, "productPromotePrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andProductPromotePriceNotEqualToColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("product_promote_price <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProductPromotePriceGreaterThan(BigDecimal value) {
            addCriterion("product_promote_price >", value, "productPromotePrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andProductPromotePriceGreaterThanColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("product_promote_price > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProductPromotePriceGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("product_promote_price >=", value, "productPromotePrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andProductPromotePriceGreaterThanOrEqualToColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("product_promote_price >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProductPromotePriceLessThan(BigDecimal value) {
            addCriterion("product_promote_price <", value, "productPromotePrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andProductPromotePriceLessThanColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("product_promote_price < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProductPromotePriceLessThanOrEqualTo(BigDecimal value) {
            addCriterion("product_promote_price <=", value, "productPromotePrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andProductPromotePriceLessThanOrEqualToColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("product_promote_price <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProductPromotePriceIn(List<BigDecimal> values) {
            addCriterion("product_promote_price in", values, "productPromotePrice");
            return (Criteria) this;
        }

        public Criteria andProductPromotePriceNotIn(List<BigDecimal> values) {
            addCriterion("product_promote_price not in", values, "productPromotePrice");
            return (Criteria) this;
        }

        public Criteria andProductPromotePriceBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("product_promote_price between", value1, value2, "productPromotePrice");
            return (Criteria) this;
        }

        public Criteria andProductPromotePriceNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("product_promote_price not between", value1, value2, "productPromotePrice");
            return (Criteria) this;
        }

        public Criteria andToppingIdIsNull() {
            addCriterion("topping_id is null");
            return (Criteria) this;
        }

        public Criteria andToppingIdIsNotNull() {
            addCriterion("topping_id is not null");
            return (Criteria) this;
        }

        public Criteria andToppingIdEqualTo(Integer[] value) {
            addToppingIdCriterion("topping_id =", value, "toppingId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andToppingIdEqualToColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("topping_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andToppingIdNotEqualTo(Integer[] value) {
            addToppingIdCriterion("topping_id <>", value, "toppingId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andToppingIdNotEqualToColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("topping_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andToppingIdGreaterThan(Integer[] value) {
            addToppingIdCriterion("topping_id >", value, "toppingId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andToppingIdGreaterThanColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("topping_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andToppingIdGreaterThanOrEqualTo(Integer[] value) {
            addToppingIdCriterion("topping_id >=", value, "toppingId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andToppingIdGreaterThanOrEqualToColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("topping_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andToppingIdLessThan(Integer[] value) {
            addToppingIdCriterion("topping_id <", value, "toppingId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andToppingIdLessThanColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("topping_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andToppingIdLessThanOrEqualTo(Integer[] value) {
            addToppingIdCriterion("topping_id <=", value, "toppingId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andToppingIdLessThanOrEqualToColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("topping_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andToppingIdLike(Integer[] value) {
            addToppingIdCriterion("topping_id like", value, "toppingId");
            return (Criteria) this;
        }

        public Criteria andToppingIdNotLike(Integer[] value) {
            addToppingIdCriterion("topping_id not like", value, "toppingId");
            return (Criteria) this;
        }

        public Criteria andToppingIdIn(List<Integer[]> values) {
            addToppingIdCriterion("topping_id in", values, "toppingId");
            return (Criteria) this;
        }

        public Criteria andToppingIdNotIn(List<Integer[]> values) {
            addToppingIdCriterion("topping_id not in", values, "toppingId");
            return (Criteria) this;
        }

        public Criteria andToppingIdBetween(Integer[] value1, Integer[] value2) {
            addToppingIdCriterion("topping_id between", value1, value2, "toppingId");
            return (Criteria) this;
        }

        public Criteria andToppingIdNotBetween(Integer[] value1, Integer[] value2) {
            addToppingIdCriterion("topping_id not between", value1, value2, "toppingId");
            return (Criteria) this;
        }

        public Criteria andToppingNameIsNull() {
            addCriterion("topping_name is null");
            return (Criteria) this;
        }

        public Criteria andToppingNameIsNotNull() {
            addCriterion("topping_name is not null");
            return (Criteria) this;
        }

        public Criteria andToppingNameEqualTo(String[] value) {
            addToppingNameCriterion("topping_name =", value, "toppingName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andToppingNameEqualToColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("topping_name = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andToppingNameNotEqualTo(String[] value) {
            addToppingNameCriterion("topping_name <>", value, "toppingName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andToppingNameNotEqualToColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("topping_name <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andToppingNameGreaterThan(String[] value) {
            addToppingNameCriterion("topping_name >", value, "toppingName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andToppingNameGreaterThanColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("topping_name > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andToppingNameGreaterThanOrEqualTo(String[] value) {
            addToppingNameCriterion("topping_name >=", value, "toppingName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andToppingNameGreaterThanOrEqualToColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("topping_name >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andToppingNameLessThan(String[] value) {
            addToppingNameCriterion("topping_name <", value, "toppingName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andToppingNameLessThanColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("topping_name < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andToppingNameLessThanOrEqualTo(String[] value) {
            addToppingNameCriterion("topping_name <=", value, "toppingName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andToppingNameLessThanOrEqualToColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("topping_name <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andToppingNameLike(String[] value) {
            addToppingNameCriterion("topping_name like", value, "toppingName");
            return (Criteria) this;
        }

        public Criteria andToppingNameNotLike(String[] value) {
            addToppingNameCriterion("topping_name not like", value, "toppingName");
            return (Criteria) this;
        }

        public Criteria andToppingNameIn(List<String[]> values) {
            addToppingNameCriterion("topping_name in", values, "toppingName");
            return (Criteria) this;
        }

        public Criteria andToppingNameNotIn(List<String[]> values) {
            addToppingNameCriterion("topping_name not in", values, "toppingName");
            return (Criteria) this;
        }

        public Criteria andToppingNameBetween(String[] value1, String[] value2) {
            addToppingNameCriterion("topping_name between", value1, value2, "toppingName");
            return (Criteria) this;
        }

        public Criteria andToppingNameNotBetween(String[] value1, String[] value2) {
            addToppingNameCriterion("topping_name not between", value1, value2, "toppingName");
            return (Criteria) this;
        }

        public Criteria andToppingPriceIsNull() {
            addCriterion("topping_price is null");
            return (Criteria) this;
        }

        public Criteria andToppingPriceIsNotNull() {
            addCriterion("topping_price is not null");
            return (Criteria) this;
        }

        public Criteria andToppingPriceEqualTo(BigDecimal value) {
            addCriterion("topping_price =", value, "toppingPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andToppingPriceEqualToColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("topping_price = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andToppingPriceNotEqualTo(BigDecimal value) {
            addCriterion("topping_price <>", value, "toppingPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andToppingPriceNotEqualToColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("topping_price <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andToppingPriceGreaterThan(BigDecimal value) {
            addCriterion("topping_price >", value, "toppingPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andToppingPriceGreaterThanColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("topping_price > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andToppingPriceGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("topping_price >=", value, "toppingPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andToppingPriceGreaterThanOrEqualToColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("topping_price >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andToppingPriceLessThan(BigDecimal value) {
            addCriterion("topping_price <", value, "toppingPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andToppingPriceLessThanColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("topping_price < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andToppingPriceLessThanOrEqualTo(BigDecimal value) {
            addCriterion("topping_price <=", value, "toppingPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andToppingPriceLessThanOrEqualToColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("topping_price <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andToppingPriceIn(List<BigDecimal> values) {
            addCriterion("topping_price in", values, "toppingPrice");
            return (Criteria) this;
        }

        public Criteria andToppingPriceNotIn(List<BigDecimal> values) {
            addCriterion("topping_price not in", values, "toppingPrice");
            return (Criteria) this;
        }

        public Criteria andToppingPriceBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("topping_price between", value1, value2, "toppingPrice");
            return (Criteria) this;
        }

        public Criteria andToppingPriceNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("topping_price not between", value1, value2, "toppingPrice");
            return (Criteria) this;
        }

        public Criteria andProductActualPriceIsNull() {
            addCriterion("product_actual_price is null");
            return (Criteria) this;
        }

        public Criteria andProductActualPriceIsNotNull() {
            addCriterion("product_actual_price is not null");
            return (Criteria) this;
        }

        public Criteria andProductActualPriceEqualTo(BigDecimal value) {
            addCriterion("product_actual_price =", value, "productActualPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andProductActualPriceEqualToColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("product_actual_price = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProductActualPriceNotEqualTo(BigDecimal value) {
            addCriterion("product_actual_price <>", value, "productActualPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andProductActualPriceNotEqualToColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("product_actual_price <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProductActualPriceGreaterThan(BigDecimal value) {
            addCriterion("product_actual_price >", value, "productActualPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andProductActualPriceGreaterThanColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("product_actual_price > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProductActualPriceGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("product_actual_price >=", value, "productActualPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andProductActualPriceGreaterThanOrEqualToColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("product_actual_price >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProductActualPriceLessThan(BigDecimal value) {
            addCriterion("product_actual_price <", value, "productActualPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andProductActualPriceLessThanColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("product_actual_price < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProductActualPriceLessThanOrEqualTo(BigDecimal value) {
            addCriterion("product_actual_price <=", value, "productActualPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andProductActualPriceLessThanOrEqualToColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("product_actual_price <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProductActualPriceIn(List<BigDecimal> values) {
            addCriterion("product_actual_price in", values, "productActualPrice");
            return (Criteria) this;
        }

        public Criteria andProductActualPriceNotIn(List<BigDecimal> values) {
            addCriterion("product_actual_price not in", values, "productActualPrice");
            return (Criteria) this;
        }

        public Criteria andProductActualPriceBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("product_actual_price between", value1, value2, "productActualPrice");
            return (Criteria) this;
        }

        public Criteria andProductActualPriceNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("product_actual_price not between", value1, value2, "productActualPrice");
            return (Criteria) this;
        }

        public Criteria andProductPictureIsNull() {
            addCriterion("product_picture is null");
            return (Criteria) this;
        }

        public Criteria andProductPictureIsNotNull() {
            addCriterion("product_picture is not null");
            return (Criteria) this;
        }

        public Criteria andProductPictureEqualTo(String value) {
            addCriterion("product_picture =", value, "productPicture");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andProductPictureEqualToColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("product_picture = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProductPictureNotEqualTo(String value) {
            addCriterion("product_picture <>", value, "productPicture");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andProductPictureNotEqualToColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("product_picture <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProductPictureGreaterThan(String value) {
            addCriterion("product_picture >", value, "productPicture");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andProductPictureGreaterThanColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("product_picture > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProductPictureGreaterThanOrEqualTo(String value) {
            addCriterion("product_picture >=", value, "productPicture");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andProductPictureGreaterThanOrEqualToColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("product_picture >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProductPictureLessThan(String value) {
            addCriterion("product_picture <", value, "productPicture");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andProductPictureLessThanColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("product_picture < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProductPictureLessThanOrEqualTo(String value) {
            addCriterion("product_picture <=", value, "productPicture");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andProductPictureLessThanOrEqualToColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("product_picture <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProductPictureLike(String value) {
            addCriterion("product_picture like", value, "productPicture");
            return (Criteria) this;
        }

        public Criteria andProductPictureNotLike(String value) {
            addCriterion("product_picture not like", value, "productPicture");
            return (Criteria) this;
        }

        public Criteria andProductPictureIn(List<String> values) {
            addCriterion("product_picture in", values, "productPicture");
            return (Criteria) this;
        }

        public Criteria andProductPictureNotIn(List<String> values) {
            addCriterion("product_picture not in", values, "productPicture");
            return (Criteria) this;
        }

        public Criteria andProductPictureBetween(String value1, String value2) {
            addCriterion("product_picture between", value1, value2, "productPicture");
            return (Criteria) this;
        }

        public Criteria andProductPictureNotBetween(String value1, String value2) {
            addCriterion("product_picture not between", value1, value2, "productPicture");
            return (Criteria) this;
        }

        public Criteria andNoteIsNull() {
            addCriterion("note is null");
            return (Criteria) this;
        }

        public Criteria andNoteIsNotNull() {
            addCriterion("note is not null");
            return (Criteria) this;
        }

        public Criteria andNoteEqualTo(String value) {
            addCriterion("note =", value, "note");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andNoteEqualToColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("note = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNoteNotEqualTo(String value) {
            addCriterion("note <>", value, "note");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andNoteNotEqualToColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("note <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNoteGreaterThan(String value) {
            addCriterion("note >", value, "note");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andNoteGreaterThanColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("note > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNoteGreaterThanOrEqualTo(String value) {
            addCriterion("note >=", value, "note");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andNoteGreaterThanOrEqualToColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("note >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNoteLessThan(String value) {
            addCriterion("note <", value, "note");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andNoteLessThanColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("note < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNoteLessThanOrEqualTo(String value) {
            addCriterion("note <=", value, "note");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andNoteLessThanOrEqualToColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("note <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNoteLike(String value) {
            addCriterion("note like", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteNotLike(String value) {
            addCriterion("note not like", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteIn(List<String> values) {
            addCriterion("note in", values, "note");
            return (Criteria) this;
        }

        public Criteria andNoteNotIn(List<String> values) {
            addCriterion("note not in", values, "note");
            return (Criteria) this;
        }

        public Criteria andNoteBetween(String value1, String value2) {
            addCriterion("note between", value1, value2, "note");
            return (Criteria) this;
        }

        public Criteria andNoteNotBetween(String value1, String value2) {
            addCriterion("note not between", value1, value2, "note");
            return (Criteria) this;
        }

        public Criteria andDeletedIsNull() {
            addCriterion("deleted is null");
            return (Criteria) this;
        }

        public Criteria andDeletedIsNotNull() {
            addCriterion("deleted is not null");
            return (Criteria) this;
        }

        public Criteria andDeletedEqualTo(Boolean value) {
            addCriterion("deleted =", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andDeletedEqualToColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("deleted = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedNotEqualTo(Boolean value) {
            addCriterion("deleted <>", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andDeletedNotEqualToColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("deleted <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedGreaterThan(Boolean value) {
            addCriterion("deleted >", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andDeletedGreaterThanColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("deleted > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedGreaterThanOrEqualTo(Boolean value) {
            addCriterion("deleted >=", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andDeletedGreaterThanOrEqualToColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("deleted >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedLessThan(Boolean value) {
            addCriterion("deleted <", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andDeletedLessThanColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("deleted < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedLessThanOrEqualTo(Boolean value) {
            addCriterion("deleted <=", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andDeletedLessThanOrEqualToColumn(DgutshopOrderItem.Column column) {
            addCriterion(new StringBuilder("deleted <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedIn(List<Boolean> values) {
            addCriterion("deleted in", values, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedNotIn(List<Boolean> values) {
            addCriterion("deleted not in", values, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedBetween(Boolean value1, Boolean value2) {
            addCriterion("deleted between", value1, value2, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedNotBetween(Boolean value1, Boolean value2) {
            addCriterion("deleted not between", value1, value2, "deleted");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table dgutshop_order_item
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        private DgutshopOrderItemExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        protected Criteria(DgutshopOrderItemExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public DgutshopOrderItemExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        public Criteria andLogicalDeleted(boolean deleted) {
            return deleted ? andDeletedEqualTo(DgutshopOrderItem.Deleted.IS_DELETED.value()) : andDeletedNotEqualTo(DgutshopOrderItem.Deleted.IS_DELETED.value());
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table dgutshop_order_item
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table dgutshop_order_item
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order_item
         *
         * @mbg.generated
         */
        void example(org.dgutstu.dgutshop.db.domain.DgutshopOrderItemExample example);
    }
}