package org.dgutstu.dgutshop.db.domain;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

public class DgutshopOrderExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table dgutshop_order
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table dgutshop_order
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table dgutshop_order
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dgutshop_order
     *
     * @mbg.generated
     */
    public DgutshopOrderExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dgutshop_order
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dgutshop_order
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dgutshop_order
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dgutshop_order
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dgutshop_order
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dgutshop_order
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dgutshop_order
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dgutshop_order
     *
     * @mbg.generated
     */
    public DgutshopOrderExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dgutshop_order
     *
     * @mbg.generated
     */
    public DgutshopOrderExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dgutshop_order
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dgutshop_order
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dgutshop_order
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dgutshop_order
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        DgutshopOrderExample example = new DgutshopOrderExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dgutshop_order
     *
     * @mbg.generated
     */
    public DgutshopOrderExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dgutshop_order
     *
     * @mbg.generated
     */
    public DgutshopOrderExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table dgutshop_order
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andIdEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andIdNotEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanOrEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanOrEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNull() {
            addCriterion("user_id is null");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("user_id is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualTo(Integer value) {
            addCriterion("user_id =", value, "userId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andUserIdEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("user_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualTo(Integer value) {
            addCriterion("user_id <>", value, "userId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andUserIdNotEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("user_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThan(Integer value) {
            addCriterion("user_id >", value, "userId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andUserIdGreaterThanColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("user_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("user_id >=", value, "userId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andUserIdGreaterThanOrEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("user_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserIdLessThan(Integer value) {
            addCriterion("user_id <", value, "userId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andUserIdLessThanColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("user_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualTo(Integer value) {
            addCriterion("user_id <=", value, "userId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andUserIdLessThanOrEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("user_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserIdIn(List<Integer> values) {
            addCriterion("user_id in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotIn(List<Integer> values) {
            addCriterion("user_id not in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdBetween(Integer value1, Integer value2) {
            addCriterion("user_id between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetween(Integer value1, Integer value2) {
            addCriterion("user_id not between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andWechatIdIsNull() {
            addCriterion("wechat_id is null");
            return (Criteria) this;
        }

        public Criteria andWechatIdIsNotNull() {
            addCriterion("wechat_id is not null");
            return (Criteria) this;
        }

        public Criteria andWechatIdEqualTo(String value) {
            addCriterion("wechat_id =", value, "wechatId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andWechatIdEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("wechat_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWechatIdNotEqualTo(String value) {
            addCriterion("wechat_id <>", value, "wechatId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andWechatIdNotEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("wechat_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWechatIdGreaterThan(String value) {
            addCriterion("wechat_id >", value, "wechatId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andWechatIdGreaterThanColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("wechat_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWechatIdGreaterThanOrEqualTo(String value) {
            addCriterion("wechat_id >=", value, "wechatId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andWechatIdGreaterThanOrEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("wechat_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWechatIdLessThan(String value) {
            addCriterion("wechat_id <", value, "wechatId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andWechatIdLessThanColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("wechat_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWechatIdLessThanOrEqualTo(String value) {
            addCriterion("wechat_id <=", value, "wechatId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andWechatIdLessThanOrEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("wechat_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWechatIdLike(String value) {
            addCriterion("wechat_id like", value, "wechatId");
            return (Criteria) this;
        }

        public Criteria andWechatIdNotLike(String value) {
            addCriterion("wechat_id not like", value, "wechatId");
            return (Criteria) this;
        }

        public Criteria andWechatIdIn(List<String> values) {
            addCriterion("wechat_id in", values, "wechatId");
            return (Criteria) this;
        }

        public Criteria andWechatIdNotIn(List<String> values) {
            addCriterion("wechat_id not in", values, "wechatId");
            return (Criteria) this;
        }

        public Criteria andWechatIdBetween(String value1, String value2) {
            addCriterion("wechat_id between", value1, value2, "wechatId");
            return (Criteria) this;
        }

        public Criteria andWechatIdNotBetween(String value1, String value2) {
            addCriterion("wechat_id not between", value1, value2, "wechatId");
            return (Criteria) this;
        }

        public Criteria andCodeIsNull() {
            addCriterion("code is null");
            return (Criteria) this;
        }

        public Criteria andCodeIsNotNull() {
            addCriterion("code is not null");
            return (Criteria) this;
        }

        public Criteria andCodeEqualTo(String value) {
            addCriterion("code =", value, "code");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andCodeEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("code = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCodeNotEqualTo(String value) {
            addCriterion("code <>", value, "code");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andCodeNotEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("code <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCodeGreaterThan(String value) {
            addCriterion("code >", value, "code");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andCodeGreaterThanColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("code > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCodeGreaterThanOrEqualTo(String value) {
            addCriterion("code >=", value, "code");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andCodeGreaterThanOrEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("code >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCodeLessThan(String value) {
            addCriterion("code <", value, "code");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andCodeLessThanColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("code < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCodeLessThanOrEqualTo(String value) {
            addCriterion("code <=", value, "code");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andCodeLessThanOrEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("code <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCodeLike(String value) {
            addCriterion("code like", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeNotLike(String value) {
            addCriterion("code not like", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeIn(List<String> values) {
            addCriterion("code in", values, "code");
            return (Criteria) this;
        }

        public Criteria andCodeNotIn(List<String> values) {
            addCriterion("code not in", values, "code");
            return (Criteria) this;
        }

        public Criteria andCodeBetween(String value1, String value2) {
            addCriterion("code between", value1, value2, "code");
            return (Criteria) this;
        }

        public Criteria andCodeNotBetween(String value1, String value2) {
            addCriterion("code not between", value1, value2, "code");
            return (Criteria) this;
        }

        public Criteria andTypeIsNull() {
            addCriterion("`type` is null");
            return (Criteria) this;
        }

        public Criteria andTypeIsNotNull() {
            addCriterion("`type` is not null");
            return (Criteria) this;
        }

        public Criteria andTypeEqualTo(Byte value) {
            addCriterion("`type` =", value, "type");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andTypeEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("`type` = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTypeNotEqualTo(Byte value) {
            addCriterion("`type` <>", value, "type");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andTypeNotEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("`type` <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThan(Byte value) {
            addCriterion("`type` >", value, "type");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andTypeGreaterThanColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("`type` > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThanOrEqualTo(Byte value) {
            addCriterion("`type` >=", value, "type");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andTypeGreaterThanOrEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("`type` >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTypeLessThan(Byte value) {
            addCriterion("`type` <", value, "type");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andTypeLessThanColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("`type` < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTypeLessThanOrEqualTo(Byte value) {
            addCriterion("`type` <=", value, "type");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andTypeLessThanOrEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("`type` <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTypeIn(List<Byte> values) {
            addCriterion("`type` in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotIn(List<Byte> values) {
            addCriterion("`type` not in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeBetween(Byte value1, Byte value2) {
            addCriterion("`type` between", value1, value2, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotBetween(Byte value1, Byte value2) {
            addCriterion("`type` not between", value1, value2, "type");
            return (Criteria) this;
        }

        public Criteria andUserNameIsNull() {
            addCriterion("user_name is null");
            return (Criteria) this;
        }

        public Criteria andUserNameIsNotNull() {
            addCriterion("user_name is not null");
            return (Criteria) this;
        }

        public Criteria andUserNameEqualTo(String value) {
            addCriterion("user_name =", value, "userName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andUserNameEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("user_name = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserNameNotEqualTo(String value) {
            addCriterion("user_name <>", value, "userName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andUserNameNotEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("user_name <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserNameGreaterThan(String value) {
            addCriterion("user_name >", value, "userName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andUserNameGreaterThanColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("user_name > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserNameGreaterThanOrEqualTo(String value) {
            addCriterion("user_name >=", value, "userName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andUserNameGreaterThanOrEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("user_name >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserNameLessThan(String value) {
            addCriterion("user_name <", value, "userName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andUserNameLessThanColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("user_name < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserNameLessThanOrEqualTo(String value) {
            addCriterion("user_name <=", value, "userName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andUserNameLessThanOrEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("user_name <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserNameLike(String value) {
            addCriterion("user_name like", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameNotLike(String value) {
            addCriterion("user_name not like", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameIn(List<String> values) {
            addCriterion("user_name in", values, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameNotIn(List<String> values) {
            addCriterion("user_name not in", values, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameBetween(String value1, String value2) {
            addCriterion("user_name between", value1, value2, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameNotBetween(String value1, String value2) {
            addCriterion("user_name not between", value1, value2, "userName");
            return (Criteria) this;
        }

        public Criteria andUserPhoneIsNull() {
            addCriterion("user_phone is null");
            return (Criteria) this;
        }

        public Criteria andUserPhoneIsNotNull() {
            addCriterion("user_phone is not null");
            return (Criteria) this;
        }

        public Criteria andUserPhoneEqualTo(String value) {
            addCriterion("user_phone =", value, "userPhone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andUserPhoneEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("user_phone = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserPhoneNotEqualTo(String value) {
            addCriterion("user_phone <>", value, "userPhone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andUserPhoneNotEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("user_phone <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserPhoneGreaterThan(String value) {
            addCriterion("user_phone >", value, "userPhone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andUserPhoneGreaterThanColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("user_phone > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserPhoneGreaterThanOrEqualTo(String value) {
            addCriterion("user_phone >=", value, "userPhone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andUserPhoneGreaterThanOrEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("user_phone >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserPhoneLessThan(String value) {
            addCriterion("user_phone <", value, "userPhone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andUserPhoneLessThanColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("user_phone < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserPhoneLessThanOrEqualTo(String value) {
            addCriterion("user_phone <=", value, "userPhone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andUserPhoneLessThanOrEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("user_phone <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserPhoneLike(String value) {
            addCriterion("user_phone like", value, "userPhone");
            return (Criteria) this;
        }

        public Criteria andUserPhoneNotLike(String value) {
            addCriterion("user_phone not like", value, "userPhone");
            return (Criteria) this;
        }

        public Criteria andUserPhoneIn(List<String> values) {
            addCriterion("user_phone in", values, "userPhone");
            return (Criteria) this;
        }

        public Criteria andUserPhoneNotIn(List<String> values) {
            addCriterion("user_phone not in", values, "userPhone");
            return (Criteria) this;
        }

        public Criteria andUserPhoneBetween(String value1, String value2) {
            addCriterion("user_phone between", value1, value2, "userPhone");
            return (Criteria) this;
        }

        public Criteria andUserPhoneNotBetween(String value1, String value2) {
            addCriterion("user_phone not between", value1, value2, "userPhone");
            return (Criteria) this;
        }

        public Criteria andCreatedDateIsNull() {
            addCriterion("created_date is null");
            return (Criteria) this;
        }

        public Criteria andCreatedDateIsNotNull() {
            addCriterion("created_date is not null");
            return (Criteria) this;
        }

        public Criteria andCreatedDateEqualTo(LocalDateTime value) {
            addCriterion("created_date =", value, "createdDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andCreatedDateEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("created_date = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatedDateNotEqualTo(LocalDateTime value) {
            addCriterion("created_date <>", value, "createdDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andCreatedDateNotEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("created_date <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatedDateGreaterThan(LocalDateTime value) {
            addCriterion("created_date >", value, "createdDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andCreatedDateGreaterThanColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("created_date > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatedDateGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("created_date >=", value, "createdDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andCreatedDateGreaterThanOrEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("created_date >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatedDateLessThan(LocalDateTime value) {
            addCriterion("created_date <", value, "createdDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andCreatedDateLessThanColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("created_date < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatedDateLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("created_date <=", value, "createdDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andCreatedDateLessThanOrEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("created_date <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatedDateIn(List<LocalDateTime> values) {
            addCriterion("created_date in", values, "createdDate");
            return (Criteria) this;
        }

        public Criteria andCreatedDateNotIn(List<LocalDateTime> values) {
            addCriterion("created_date not in", values, "createdDate");
            return (Criteria) this;
        }

        public Criteria andCreatedDateBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("created_date between", value1, value2, "createdDate");
            return (Criteria) this;
        }

        public Criteria andCreatedDateNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("created_date not between", value1, value2, "createdDate");
            return (Criteria) this;
        }

        public Criteria andPayDateIsNull() {
            addCriterion("pay_date is null");
            return (Criteria) this;
        }

        public Criteria andPayDateIsNotNull() {
            addCriterion("pay_date is not null");
            return (Criteria) this;
        }

        public Criteria andPayDateEqualTo(LocalDateTime value) {
            addCriterion("pay_date =", value, "payDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andPayDateEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("pay_date = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayDateNotEqualTo(LocalDateTime value) {
            addCriterion("pay_date <>", value, "payDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andPayDateNotEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("pay_date <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayDateGreaterThan(LocalDateTime value) {
            addCriterion("pay_date >", value, "payDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andPayDateGreaterThanColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("pay_date > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayDateGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("pay_date >=", value, "payDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andPayDateGreaterThanOrEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("pay_date >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayDateLessThan(LocalDateTime value) {
            addCriterion("pay_date <", value, "payDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andPayDateLessThanColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("pay_date < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayDateLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("pay_date <=", value, "payDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andPayDateLessThanOrEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("pay_date <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayDateIn(List<LocalDateTime> values) {
            addCriterion("pay_date in", values, "payDate");
            return (Criteria) this;
        }

        public Criteria andPayDateNotIn(List<LocalDateTime> values) {
            addCriterion("pay_date not in", values, "payDate");
            return (Criteria) this;
        }

        public Criteria andPayDateBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("pay_date between", value1, value2, "payDate");
            return (Criteria) this;
        }

        public Criteria andPayDateNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("pay_date not between", value1, value2, "payDate");
            return (Criteria) this;
        }

        public Criteria andDeliveryCompanyIsNull() {
            addCriterion("delivery_company is null");
            return (Criteria) this;
        }

        public Criteria andDeliveryCompanyIsNotNull() {
            addCriterion("delivery_company is not null");
            return (Criteria) this;
        }

        public Criteria andDeliveryCompanyEqualTo(String value) {
            addCriterion("delivery_company =", value, "deliveryCompany");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andDeliveryCompanyEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("delivery_company = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeliveryCompanyNotEqualTo(String value) {
            addCriterion("delivery_company <>", value, "deliveryCompany");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andDeliveryCompanyNotEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("delivery_company <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeliveryCompanyGreaterThan(String value) {
            addCriterion("delivery_company >", value, "deliveryCompany");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andDeliveryCompanyGreaterThanColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("delivery_company > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeliveryCompanyGreaterThanOrEqualTo(String value) {
            addCriterion("delivery_company >=", value, "deliveryCompany");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andDeliveryCompanyGreaterThanOrEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("delivery_company >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeliveryCompanyLessThan(String value) {
            addCriterion("delivery_company <", value, "deliveryCompany");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andDeliveryCompanyLessThanColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("delivery_company < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeliveryCompanyLessThanOrEqualTo(String value) {
            addCriterion("delivery_company <=", value, "deliveryCompany");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andDeliveryCompanyLessThanOrEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("delivery_company <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeliveryCompanyLike(String value) {
            addCriterion("delivery_company like", value, "deliveryCompany");
            return (Criteria) this;
        }

        public Criteria andDeliveryCompanyNotLike(String value) {
            addCriterion("delivery_company not like", value, "deliveryCompany");
            return (Criteria) this;
        }

        public Criteria andDeliveryCompanyIn(List<String> values) {
            addCriterion("delivery_company in", values, "deliveryCompany");
            return (Criteria) this;
        }

        public Criteria andDeliveryCompanyNotIn(List<String> values) {
            addCriterion("delivery_company not in", values, "deliveryCompany");
            return (Criteria) this;
        }

        public Criteria andDeliveryCompanyBetween(String value1, String value2) {
            addCriterion("delivery_company between", value1, value2, "deliveryCompany");
            return (Criteria) this;
        }

        public Criteria andDeliveryCompanyNotBetween(String value1, String value2) {
            addCriterion("delivery_company not between", value1, value2, "deliveryCompany");
            return (Criteria) this;
        }

        public Criteria andDeliveryCodeIsNull() {
            addCriterion("delivery_code is null");
            return (Criteria) this;
        }

        public Criteria andDeliveryCodeIsNotNull() {
            addCriterion("delivery_code is not null");
            return (Criteria) this;
        }

        public Criteria andDeliveryCodeEqualTo(String value) {
            addCriterion("delivery_code =", value, "deliveryCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andDeliveryCodeEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("delivery_code = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeliveryCodeNotEqualTo(String value) {
            addCriterion("delivery_code <>", value, "deliveryCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andDeliveryCodeNotEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("delivery_code <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeliveryCodeGreaterThan(String value) {
            addCriterion("delivery_code >", value, "deliveryCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andDeliveryCodeGreaterThanColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("delivery_code > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeliveryCodeGreaterThanOrEqualTo(String value) {
            addCriterion("delivery_code >=", value, "deliveryCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andDeliveryCodeGreaterThanOrEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("delivery_code >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeliveryCodeLessThan(String value) {
            addCriterion("delivery_code <", value, "deliveryCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andDeliveryCodeLessThanColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("delivery_code < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeliveryCodeLessThanOrEqualTo(String value) {
            addCriterion("delivery_code <=", value, "deliveryCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andDeliveryCodeLessThanOrEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("delivery_code <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeliveryCodeLike(String value) {
            addCriterion("delivery_code like", value, "deliveryCode");
            return (Criteria) this;
        }

        public Criteria andDeliveryCodeNotLike(String value) {
            addCriterion("delivery_code not like", value, "deliveryCode");
            return (Criteria) this;
        }

        public Criteria andDeliveryCodeIn(List<String> values) {
            addCriterion("delivery_code in", values, "deliveryCode");
            return (Criteria) this;
        }

        public Criteria andDeliveryCodeNotIn(List<String> values) {
            addCriterion("delivery_code not in", values, "deliveryCode");
            return (Criteria) this;
        }

        public Criteria andDeliveryCodeBetween(String value1, String value2) {
            addCriterion("delivery_code between", value1, value2, "deliveryCode");
            return (Criteria) this;
        }

        public Criteria andDeliveryCodeNotBetween(String value1, String value2) {
            addCriterion("delivery_code not between", value1, value2, "deliveryCode");
            return (Criteria) this;
        }

        public Criteria andDeliverymanNameIsNull() {
            addCriterion("deliveryman_name is null");
            return (Criteria) this;
        }

        public Criteria andDeliverymanNameIsNotNull() {
            addCriterion("deliveryman_name is not null");
            return (Criteria) this;
        }

        public Criteria andDeliverymanNameEqualTo(String value) {
            addCriterion("deliveryman_name =", value, "deliverymanName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andDeliverymanNameEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("deliveryman_name = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeliverymanNameNotEqualTo(String value) {
            addCriterion("deliveryman_name <>", value, "deliverymanName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andDeliverymanNameNotEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("deliveryman_name <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeliverymanNameGreaterThan(String value) {
            addCriterion("deliveryman_name >", value, "deliverymanName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andDeliverymanNameGreaterThanColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("deliveryman_name > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeliverymanNameGreaterThanOrEqualTo(String value) {
            addCriterion("deliveryman_name >=", value, "deliverymanName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andDeliverymanNameGreaterThanOrEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("deliveryman_name >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeliverymanNameLessThan(String value) {
            addCriterion("deliveryman_name <", value, "deliverymanName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andDeliverymanNameLessThanColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("deliveryman_name < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeliverymanNameLessThanOrEqualTo(String value) {
            addCriterion("deliveryman_name <=", value, "deliverymanName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andDeliverymanNameLessThanOrEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("deliveryman_name <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeliverymanNameLike(String value) {
            addCriterion("deliveryman_name like", value, "deliverymanName");
            return (Criteria) this;
        }

        public Criteria andDeliverymanNameNotLike(String value) {
            addCriterion("deliveryman_name not like", value, "deliverymanName");
            return (Criteria) this;
        }

        public Criteria andDeliverymanNameIn(List<String> values) {
            addCriterion("deliveryman_name in", values, "deliverymanName");
            return (Criteria) this;
        }

        public Criteria andDeliverymanNameNotIn(List<String> values) {
            addCriterion("deliveryman_name not in", values, "deliverymanName");
            return (Criteria) this;
        }

        public Criteria andDeliverymanNameBetween(String value1, String value2) {
            addCriterion("deliveryman_name between", value1, value2, "deliverymanName");
            return (Criteria) this;
        }

        public Criteria andDeliverymanNameNotBetween(String value1, String value2) {
            addCriterion("deliveryman_name not between", value1, value2, "deliverymanName");
            return (Criteria) this;
        }

        public Criteria andDeliverymanPhoneIsNull() {
            addCriterion("deliveryman_phone is null");
            return (Criteria) this;
        }

        public Criteria andDeliverymanPhoneIsNotNull() {
            addCriterion("deliveryman_phone is not null");
            return (Criteria) this;
        }

        public Criteria andDeliverymanPhoneEqualTo(String value) {
            addCriterion("deliveryman_phone =", value, "deliverymanPhone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andDeliverymanPhoneEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("deliveryman_phone = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeliverymanPhoneNotEqualTo(String value) {
            addCriterion("deliveryman_phone <>", value, "deliverymanPhone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andDeliverymanPhoneNotEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("deliveryman_phone <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeliverymanPhoneGreaterThan(String value) {
            addCriterion("deliveryman_phone >", value, "deliverymanPhone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andDeliverymanPhoneGreaterThanColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("deliveryman_phone > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeliverymanPhoneGreaterThanOrEqualTo(String value) {
            addCriterion("deliveryman_phone >=", value, "deliverymanPhone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andDeliverymanPhoneGreaterThanOrEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("deliveryman_phone >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeliverymanPhoneLessThan(String value) {
            addCriterion("deliveryman_phone <", value, "deliverymanPhone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andDeliverymanPhoneLessThanColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("deliveryman_phone < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeliverymanPhoneLessThanOrEqualTo(String value) {
            addCriterion("deliveryman_phone <=", value, "deliverymanPhone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andDeliverymanPhoneLessThanOrEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("deliveryman_phone <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeliverymanPhoneLike(String value) {
            addCriterion("deliveryman_phone like", value, "deliverymanPhone");
            return (Criteria) this;
        }

        public Criteria andDeliverymanPhoneNotLike(String value) {
            addCriterion("deliveryman_phone not like", value, "deliverymanPhone");
            return (Criteria) this;
        }

        public Criteria andDeliverymanPhoneIn(List<String> values) {
            addCriterion("deliveryman_phone in", values, "deliverymanPhone");
            return (Criteria) this;
        }

        public Criteria andDeliverymanPhoneNotIn(List<String> values) {
            addCriterion("deliveryman_phone not in", values, "deliverymanPhone");
            return (Criteria) this;
        }

        public Criteria andDeliverymanPhoneBetween(String value1, String value2) {
            addCriterion("deliveryman_phone between", value1, value2, "deliverymanPhone");
            return (Criteria) this;
        }

        public Criteria andDeliverymanPhoneNotBetween(String value1, String value2) {
            addCriterion("deliveryman_phone not between", value1, value2, "deliverymanPhone");
            return (Criteria) this;
        }

        public Criteria andDeliveryTimeIsNull() {
            addCriterion("delivery_time is null");
            return (Criteria) this;
        }

        public Criteria andDeliveryTimeIsNotNull() {
            addCriterion("delivery_time is not null");
            return (Criteria) this;
        }

        public Criteria andDeliveryTimeEqualTo(LocalDateTime value) {
            addCriterion("delivery_time =", value, "deliveryTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andDeliveryTimeEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("delivery_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeliveryTimeNotEqualTo(LocalDateTime value) {
            addCriterion("delivery_time <>", value, "deliveryTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andDeliveryTimeNotEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("delivery_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeliveryTimeGreaterThan(LocalDateTime value) {
            addCriterion("delivery_time >", value, "deliveryTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andDeliveryTimeGreaterThanColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("delivery_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeliveryTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("delivery_time >=", value, "deliveryTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andDeliveryTimeGreaterThanOrEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("delivery_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeliveryTimeLessThan(LocalDateTime value) {
            addCriterion("delivery_time <", value, "deliveryTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andDeliveryTimeLessThanColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("delivery_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeliveryTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("delivery_time <=", value, "deliveryTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andDeliveryTimeLessThanOrEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("delivery_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeliveryTimeIn(List<LocalDateTime> values) {
            addCriterion("delivery_time in", values, "deliveryTime");
            return (Criteria) this;
        }

        public Criteria andDeliveryTimeNotIn(List<LocalDateTime> values) {
            addCriterion("delivery_time not in", values, "deliveryTime");
            return (Criteria) this;
        }

        public Criteria andDeliveryTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("delivery_time between", value1, value2, "deliveryTime");
            return (Criteria) this;
        }

        public Criteria andDeliveryTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("delivery_time not between", value1, value2, "deliveryTime");
            return (Criteria) this;
        }

        public Criteria andProductPriceIsNull() {
            addCriterion("product_price is null");
            return (Criteria) this;
        }

        public Criteria andProductPriceIsNotNull() {
            addCriterion("product_price is not null");
            return (Criteria) this;
        }

        public Criteria andProductPriceEqualTo(BigDecimal value) {
            addCriterion("product_price =", value, "productPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andProductPriceEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("product_price = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProductPriceNotEqualTo(BigDecimal value) {
            addCriterion("product_price <>", value, "productPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andProductPriceNotEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("product_price <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProductPriceGreaterThan(BigDecimal value) {
            addCriterion("product_price >", value, "productPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andProductPriceGreaterThanColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("product_price > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProductPriceGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("product_price >=", value, "productPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andProductPriceGreaterThanOrEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("product_price >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProductPriceLessThan(BigDecimal value) {
            addCriterion("product_price <", value, "productPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andProductPriceLessThanColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("product_price < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProductPriceLessThanOrEqualTo(BigDecimal value) {
            addCriterion("product_price <=", value, "productPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andProductPriceLessThanOrEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("product_price <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProductPriceIn(List<BigDecimal> values) {
            addCriterion("product_price in", values, "productPrice");
            return (Criteria) this;
        }

        public Criteria andProductPriceNotIn(List<BigDecimal> values) {
            addCriterion("product_price not in", values, "productPrice");
            return (Criteria) this;
        }

        public Criteria andProductPriceBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("product_price between", value1, value2, "productPrice");
            return (Criteria) this;
        }

        public Criteria andProductPriceNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("product_price not between", value1, value2, "productPrice");
            return (Criteria) this;
        }

        public Criteria andDeliveryPriceIsNull() {
            addCriterion("delivery_price is null");
            return (Criteria) this;
        }

        public Criteria andDeliveryPriceIsNotNull() {
            addCriterion("delivery_price is not null");
            return (Criteria) this;
        }

        public Criteria andDeliveryPriceEqualTo(BigDecimal value) {
            addCriterion("delivery_price =", value, "deliveryPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andDeliveryPriceEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("delivery_price = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeliveryPriceNotEqualTo(BigDecimal value) {
            addCriterion("delivery_price <>", value, "deliveryPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andDeliveryPriceNotEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("delivery_price <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeliveryPriceGreaterThan(BigDecimal value) {
            addCriterion("delivery_price >", value, "deliveryPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andDeliveryPriceGreaterThanColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("delivery_price > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeliveryPriceGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("delivery_price >=", value, "deliveryPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andDeliveryPriceGreaterThanOrEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("delivery_price >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeliveryPriceLessThan(BigDecimal value) {
            addCriterion("delivery_price <", value, "deliveryPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andDeliveryPriceLessThanColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("delivery_price < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeliveryPriceLessThanOrEqualTo(BigDecimal value) {
            addCriterion("delivery_price <=", value, "deliveryPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andDeliveryPriceLessThanOrEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("delivery_price <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeliveryPriceIn(List<BigDecimal> values) {
            addCriterion("delivery_price in", values, "deliveryPrice");
            return (Criteria) this;
        }

        public Criteria andDeliveryPriceNotIn(List<BigDecimal> values) {
            addCriterion("delivery_price not in", values, "deliveryPrice");
            return (Criteria) this;
        }

        public Criteria andDeliveryPriceBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("delivery_price between", value1, value2, "deliveryPrice");
            return (Criteria) this;
        }

        public Criteria andDeliveryPriceNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("delivery_price not between", value1, value2, "deliveryPrice");
            return (Criteria) this;
        }

        public Criteria andOrderpriceIsNull() {
            addCriterion("orderprice is null");
            return (Criteria) this;
        }

        public Criteria andOrderpriceIsNotNull() {
            addCriterion("orderprice is not null");
            return (Criteria) this;
        }

        public Criteria andOrderpriceEqualTo(BigDecimal value) {
            addCriterion("orderprice =", value, "orderprice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andOrderpriceEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("orderprice = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderpriceNotEqualTo(BigDecimal value) {
            addCriterion("orderprice <>", value, "orderprice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andOrderpriceNotEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("orderprice <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderpriceGreaterThan(BigDecimal value) {
            addCriterion("orderprice >", value, "orderprice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andOrderpriceGreaterThanColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("orderprice > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderpriceGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("orderprice >=", value, "orderprice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andOrderpriceGreaterThanOrEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("orderprice >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderpriceLessThan(BigDecimal value) {
            addCriterion("orderprice <", value, "orderprice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andOrderpriceLessThanColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("orderprice < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderpriceLessThanOrEqualTo(BigDecimal value) {
            addCriterion("orderprice <=", value, "orderprice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andOrderpriceLessThanOrEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("orderprice <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderpriceIn(List<BigDecimal> values) {
            addCriterion("orderprice in", values, "orderprice");
            return (Criteria) this;
        }

        public Criteria andOrderpriceNotIn(List<BigDecimal> values) {
            addCriterion("orderprice not in", values, "orderprice");
            return (Criteria) this;
        }

        public Criteria andOrderpriceBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("orderprice between", value1, value2, "orderprice");
            return (Criteria) this;
        }

        public Criteria andOrderpriceNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("orderprice not between", value1, value2, "orderprice");
            return (Criteria) this;
        }

        public Criteria andUserAddressIsNull() {
            addCriterion("user_address is null");
            return (Criteria) this;
        }

        public Criteria andUserAddressIsNotNull() {
            addCriterion("user_address is not null");
            return (Criteria) this;
        }

        public Criteria andUserAddressEqualTo(String value) {
            addCriterion("user_address =", value, "userAddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andUserAddressEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("user_address = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserAddressNotEqualTo(String value) {
            addCriterion("user_address <>", value, "userAddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andUserAddressNotEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("user_address <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserAddressGreaterThan(String value) {
            addCriterion("user_address >", value, "userAddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andUserAddressGreaterThanColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("user_address > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserAddressGreaterThanOrEqualTo(String value) {
            addCriterion("user_address >=", value, "userAddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andUserAddressGreaterThanOrEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("user_address >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserAddressLessThan(String value) {
            addCriterion("user_address <", value, "userAddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andUserAddressLessThanColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("user_address < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserAddressLessThanOrEqualTo(String value) {
            addCriterion("user_address <=", value, "userAddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andUserAddressLessThanOrEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("user_address <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserAddressLike(String value) {
            addCriterion("user_address like", value, "userAddress");
            return (Criteria) this;
        }

        public Criteria andUserAddressNotLike(String value) {
            addCriterion("user_address not like", value, "userAddress");
            return (Criteria) this;
        }

        public Criteria andUserAddressIn(List<String> values) {
            addCriterion("user_address in", values, "userAddress");
            return (Criteria) this;
        }

        public Criteria andUserAddressNotIn(List<String> values) {
            addCriterion("user_address not in", values, "userAddress");
            return (Criteria) this;
        }

        public Criteria andUserAddressBetween(String value1, String value2) {
            addCriterion("user_address between", value1, value2, "userAddress");
            return (Criteria) this;
        }

        public Criteria andUserAddressNotBetween(String value1, String value2) {
            addCriterion("user_address not between", value1, value2, "userAddress");
            return (Criteria) this;
        }

        public Criteria andUserRoomIsNull() {
            addCriterion("user_room is null");
            return (Criteria) this;
        }

        public Criteria andUserRoomIsNotNull() {
            addCriterion("user_room is not null");
            return (Criteria) this;
        }

        public Criteria andUserRoomEqualTo(String value) {
            addCriterion("user_room =", value, "userRoom");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andUserRoomEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("user_room = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserRoomNotEqualTo(String value) {
            addCriterion("user_room <>", value, "userRoom");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andUserRoomNotEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("user_room <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserRoomGreaterThan(String value) {
            addCriterion("user_room >", value, "userRoom");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andUserRoomGreaterThanColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("user_room > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserRoomGreaterThanOrEqualTo(String value) {
            addCriterion("user_room >=", value, "userRoom");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andUserRoomGreaterThanOrEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("user_room >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserRoomLessThan(String value) {
            addCriterion("user_room <", value, "userRoom");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andUserRoomLessThanColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("user_room < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserRoomLessThanOrEqualTo(String value) {
            addCriterion("user_room <=", value, "userRoom");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andUserRoomLessThanOrEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("user_room <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserRoomLike(String value) {
            addCriterion("user_room like", value, "userRoom");
            return (Criteria) this;
        }

        public Criteria andUserRoomNotLike(String value) {
            addCriterion("user_room not like", value, "userRoom");
            return (Criteria) this;
        }

        public Criteria andUserRoomIn(List<String> values) {
            addCriterion("user_room in", values, "userRoom");
            return (Criteria) this;
        }

        public Criteria andUserRoomNotIn(List<String> values) {
            addCriterion("user_room not in", values, "userRoom");
            return (Criteria) this;
        }

        public Criteria andUserRoomBetween(String value1, String value2) {
            addCriterion("user_room between", value1, value2, "userRoom");
            return (Criteria) this;
        }

        public Criteria andUserRoomNotBetween(String value1, String value2) {
            addCriterion("user_room not between", value1, value2, "userRoom");
            return (Criteria) this;
        }

        public Criteria andTakeCodeIsNull() {
            addCriterion("take_code is null");
            return (Criteria) this;
        }

        public Criteria andTakeCodeIsNotNull() {
            addCriterion("take_code is not null");
            return (Criteria) this;
        }

        public Criteria andTakeCodeEqualTo(String value) {
            addCriterion("take_code =", value, "takeCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andTakeCodeEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("take_code = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTakeCodeNotEqualTo(String value) {
            addCriterion("take_code <>", value, "takeCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andTakeCodeNotEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("take_code <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTakeCodeGreaterThan(String value) {
            addCriterion("take_code >", value, "takeCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andTakeCodeGreaterThanColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("take_code > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTakeCodeGreaterThanOrEqualTo(String value) {
            addCriterion("take_code >=", value, "takeCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andTakeCodeGreaterThanOrEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("take_code >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTakeCodeLessThan(String value) {
            addCriterion("take_code <", value, "takeCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andTakeCodeLessThanColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("take_code < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTakeCodeLessThanOrEqualTo(String value) {
            addCriterion("take_code <=", value, "takeCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andTakeCodeLessThanOrEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("take_code <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTakeCodeLike(String value) {
            addCriterion("take_code like", value, "takeCode");
            return (Criteria) this;
        }

        public Criteria andTakeCodeNotLike(String value) {
            addCriterion("take_code not like", value, "takeCode");
            return (Criteria) this;
        }

        public Criteria andTakeCodeIn(List<String> values) {
            addCriterion("take_code in", values, "takeCode");
            return (Criteria) this;
        }

        public Criteria andTakeCodeNotIn(List<String> values) {
            addCriterion("take_code not in", values, "takeCode");
            return (Criteria) this;
        }

        public Criteria andTakeCodeBetween(String value1, String value2) {
            addCriterion("take_code between", value1, value2, "takeCode");
            return (Criteria) this;
        }

        public Criteria andTakeCodeNotBetween(String value1, String value2) {
            addCriterion("take_code not between", value1, value2, "takeCode");
            return (Criteria) this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("`status` is null");
            return (Criteria) this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("`status` is not null");
            return (Criteria) this;
        }

        public Criteria andStatusEqualTo(Short value) {
            addCriterion("`status` =", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andStatusEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("`status` = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusNotEqualTo(Short value) {
            addCriterion("`status` <>", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andStatusNotEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("`status` <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThan(Short value) {
            addCriterion("`status` >", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andStatusGreaterThanColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("`status` > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(Short value) {
            addCriterion("`status` >=", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andStatusGreaterThanOrEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("`status` >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusLessThan(Short value) {
            addCriterion("`status` <", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andStatusLessThanColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("`status` < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusLessThanOrEqualTo(Short value) {
            addCriterion("`status` <=", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andStatusLessThanOrEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("`status` <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusIn(List<Short> values) {
            addCriterion("`status` in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotIn(List<Short> values) {
            addCriterion("`status` not in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusBetween(Short value1, Short value2) {
            addCriterion("`status` between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotBetween(Short value1, Short value2) {
            addCriterion("`status` not between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andDeletedIsNull() {
            addCriterion("deleted is null");
            return (Criteria) this;
        }

        public Criteria andDeletedIsNotNull() {
            addCriterion("deleted is not null");
            return (Criteria) this;
        }

        public Criteria andDeletedEqualTo(Boolean value) {
            addCriterion("deleted =", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andDeletedEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("deleted = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedNotEqualTo(Boolean value) {
            addCriterion("deleted <>", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andDeletedNotEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("deleted <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedGreaterThan(Boolean value) {
            addCriterion("deleted >", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andDeletedGreaterThanColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("deleted > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedGreaterThanOrEqualTo(Boolean value) {
            addCriterion("deleted >=", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andDeletedGreaterThanOrEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("deleted >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedLessThan(Boolean value) {
            addCriterion("deleted <", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andDeletedLessThanColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("deleted < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedLessThanOrEqualTo(Boolean value) {
            addCriterion("deleted <=", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andDeletedLessThanOrEqualToColumn(DgutshopOrder.Column column) {
            addCriterion(new StringBuilder("deleted <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedIn(List<Boolean> values) {
            addCriterion("deleted in", values, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedNotIn(List<Boolean> values) {
            addCriterion("deleted not in", values, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedBetween(Boolean value1, Boolean value2) {
            addCriterion("deleted between", value1, value2, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedNotBetween(Boolean value1, Boolean value2) {
            addCriterion("deleted not between", value1, value2, "deleted");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table dgutshop_order
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        private DgutshopOrderExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        protected Criteria(DgutshopOrderExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public DgutshopOrderExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        public Criteria andLogicalDeleted(boolean deleted) {
            return deleted ? andDeletedEqualTo(DgutshopOrder.Deleted.IS_DELETED.value()) : andDeletedNotEqualTo(DgutshopOrder.Deleted.IS_DELETED.value());
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table dgutshop_order
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table dgutshop_order
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dgutshop_order
         *
         * @mbg.generated
         */
        void example(org.dgutstu.dgutshop.db.domain.DgutshopOrderExample example);
    }
}